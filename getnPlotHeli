#!/usr/bin/perl
#
# Runs getnPlot multiple times and then montages the output to create a helicorder-like plot
#
# R.C.Stewart, 2025-01-18

use strict;
use warnings;
use File::Copy;
use File::Temp qw/tempdir/;
use Cwd qw(getcwd);
use DateTime;
use DateTime::Duration;
use feature 'fc';

my $numArgs = $#ARGV + 1;

if( $numArgs < 2 ){ 
    print "Not enough arguments", "\n";
    print "usage: getnPlotHeli yyyy-mm-dd hh:mm minutesWide hoursPlot", "\n";
    print "usage: add a fifth argument to trigger non-interactive batch mode\n";
} else {

    print "WARNING: THIS TAKES A LONG TIME\n";

    my $eventDate = $ARGV[0];
    my $eventTime = $ARGV[1];
    my $lineLength;
    my $plotLength;
    my $batchMode = 0;
    if( $numArgs == 5 ){
        $batchMode = 1;
    }
    if( $numArgs >= 4 ){
        $lineLength = $ARGV[2];
        $plotLength = $ARGV[3];
    } else {
        $lineLength = 60;
        $plotLength = 24;
    }
    $plotLength = $plotLength * 60;

    my($yyyy,$mm,$dd) = split( '-', $eventDate );
    my($hh,$mi) = split( ':', $eventTime );

    my $filePlot = join( '-', join( '', $yyyy, $mm, $dd ), join( '', $hh, $mi ), '-getnPlotHeli-' );
    $filePlot = join( '', $filePlot, sprintf( "%d", $lineLength ), 'm.png' );

    # datetime for start time
    my $dtStart = DateTime->new(
        year       => $yyyy,
        month      => $mm,
        day        => $dd,
        hour       => $hh,
        minute     => $mi,
        second     => 0,
        nanosecond => 0,
        time_zone  => 'UTC',
    );
    my $dtdJump = DateTime::Duration->new( minutes => $lineLength );
    my $dtdPlot = DateTime::Duration->new( minutes => $plotLength );
    my $dtEnd = $dtStart + $dtdPlot;
    
    my $options = '--quiet --tag GNPFH --shape xxxxlong --pre 0m --kind Z --chaff noscnl --nogreen';
    $options = join( ' ', $options, '--dur', $lineLength ); 
    $options = join( '', $options, 'm' );
    my $additionalOptions = '--sta MSS1 --hpfilt 2.0 --ylim 1200';

    my $keepPlots = 'n';
    if( $batchMode == 0 ) {

        print "Fixed getnPlot options: $options\n";
        print "Current additional options: ", $additionalOptions, "\n";
        print "Replace above options with (<CR> for not): ";
        my $optsAdditional = <STDIN>;
        chomp $optsAdditional;
        if( $optsAdditional ne '' ){
	        $additionalOptions = $optsAdditional;
        }

        print "Keep individual plot files?: ";
        $keepPlots = <STDIN>;
        chomp $keepPlots;

    }

    $options = join( ' ', $options, $additionalOptions );

    my $jumpOut = 0;
    do {
        
        my $gnpDate = $dtStart->ymd;
        my $gnpTime = $dtStart->hms;

	    my $cmd = join( ' ', 'getnPlot', $options, '--date', $gnpDate, '--time', $gnpTime );
	    print $cmd, "\n";
        system( $cmd );

        $dtStart = $dtStart + $dtdJump;
    
        if( $dtStart >= $dtEnd ){
            $jumpOut = 1;
        }
    } until( $jumpOut );

    my $cmd = 'magick mogrify -crop 3724x91+79+61 *GNPFH*.png';
    system( $cmd );
    $cmd = join( ' ', 'magick montage *GNPFH*.png -tile 1x -geometry +0+0', $filePlot );
    system( $cmd );

    if( fc( $keepPlots ) ne fc( "y" ) ){
    	$cmd = 'rm *GNPFH*.png';
    	system( $cmd );
    }


}
